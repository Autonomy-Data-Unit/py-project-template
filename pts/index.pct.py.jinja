# %% [markdown]
# # {{project_name}}

# %%
#|hide
import nblite; from nbdev.showdoc import show_doc; nblite.nbl_export()

# %%
#|hide
import {{project_name_slug}} as proj

# %% [markdown]
# # Usage
#
# To run all all scripts in `core` in sequence, run
#
# ```python
# {{project_name_slug}}.core.run_all()
# ```
#
# from within Python, or
#
# ```
# run-{{project-name}}
# ```
#
# from the terminal.

# %% [markdown]
# # Development install instructions
#
# ## Prerequisites
#
# - Install [uv](https://docs.astral.sh/uv/getting-started/installation/).
# - Install [direnv](https://direnv.net/) to automatically load the project virtual environment when entering it.
#     - Mac: `brew install direnv`
#     - Linux: `curl -sfL https://direnv.net/install.sh | bash`
#
# ## Setting up the environment
#
# Run the following:
#
# ```bash
# # CD into the root of the repo folder
# uv sync # Installs the virtual environment at './.venv'
# direnv allow # Allows the automatic running of the script './.envrc'
# nbl install-hooks # Installs some git hooks that ensures that notebooks are added properly
# uv pip install -e .
# ```
#
# You are now set up to develop the codebase.
#
# Further instructions:
#
# - To export notebooks run nbl export.
# - To clean notebooks run nbl clean.
# - To see other available commands run just nbl.
# - To add a new dependency run uv add package-name. See the the uv documentation for more details.
# - You need to git add all 'twinned' notebooks for the commit to be validated. For example, if you add nbs/my-nb.ipynb, you must also add pts/my-nb.pct.py.
